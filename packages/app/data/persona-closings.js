// ðŸŽ¯ CLOSINGS PERSONNALISÃ‰S par Persona Ã— Journey
// Structure: persona â†’ journey â†’ closing personnalisÃ©

export const PERSONA_CLOSINGS = {
  emma: {
    body: "Je t'accompagne dans cette reconnexion avec ton corps",
    nature: "Je t'aide Ã  cÃ©lÃ©brer ta nature cyclique authentique", 
    emotions: "Je te guide vers une relation apaisÃ©e avec tes Ã©motions"
  },
  
  laure: {
    body: "Optimise cette connexion corps-esprit pour ta performance",
    nature: "Transforme tes cycles en avantage stratÃ©gique personnel",
    emotions: "DÃ©veloppe ton intelligence Ã©motionnelle comme un atout"
  },
  
  sylvie: {
    body: "Accueille avec douceur cette sagesse corporelle",
    nature: "Embrasse la beautÃ© de tes rythmes naturels fÃ©minins", 
    emotions: "Transforme tes Ã©motions en force crÃ©atrice"
  },
  
  christine: {
    body: "Laisse ton corps te guider vers ta vÃ©ritÃ© intÃ©rieure",
    nature: "Honore cette sagesse ancestrale qui vit en toi",
    emotions: "Cultive cette maturitÃ© Ã©motionnelle qui t'habite"
  },
  
  clara: {
    body: "Analyse ces signaux pour mieux comprendre ton fonctionnement",
    nature: "Observe la logique fascinante de tes cycles biologiques",
    emotions: "DÃ©crypte ces patterns pour maÃ®triser tes rÃ©actions"
  }
};

// ðŸŽ¯ MAPPING Journey Options vers Journey Keys
export const JOURNEY_KEYS = {
  'body': 'body',
  'nature': 'nature', 
  'emotions': 'emotions'
};

// ðŸŽ¯ FONCTION : Obtenir closing personnalisÃ©
export const getPersonalizedClosing = (persona, journeyChoice) => {
  // VÃ©rifier que le persona existe
  if (!PERSONA_CLOSINGS[persona]) {
    return "Continue ton chemin avec confiance"; // Fallback gÃ©nÃ©rique
  }
  
  // Mapper le journey choice vers la clÃ©
  const journeyKey = JOURNEY_KEYS[journeyChoice] || 'body'; // Fallback vers 'body'
  
  // Retourner le closing personnalisÃ©
  return PERSONA_CLOSINGS[persona][journeyKey] || PERSONA_CLOSINGS[persona].body;
};

// ðŸŽ¯ FONCTION DEBUG : Lister tous les closings
export const getAllClosings = () => {
  const result = [];
  
  Object.entries(PERSONA_CLOSINGS).forEach(([persona, journeys]) => {
    Object.entries(journeys).forEach(([journey, closing]) => {
      result.push({
        persona,
        journey, 
        closing,
        example: `Emma rayonne aujourd'hui${closing}`
      });
    });
  });
  
  return result;
}; 